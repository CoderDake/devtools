name: Release Preparedness

on:
  pull_request:
# TODO: have a most recent version that is being checked (not hardcoded to 2.18)
env:
  JSON_RELEASE_FILE_PATH: packages/devtools_app/lib/src/framework/release_notes/release_notes-latest.json
jobs:
  release-preparedness:
    runs-on: ubuntu-latest
    name: Release Preparedness
    steps:

      - name: Get Pull Request Number
        id: get-pull-request-number
        run: |
          PULL_REQUEST_NUMBER=$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")
          echo "::set-output name=PULL_REQUEST_NUMBER::$PULL_REQUEST_NUMBER"

      - name: Check if we have modified release_notes.json 
        id: get-modified-files
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PULL_NUMBER: ${{steps.get-pull-request-number.outputs.PULL_REQUEST_NUMBER}}
        run: |
          FILES_RESPONSE=$(gh api /repos/flutter/devtools/pulls/$PULL_NUMBER/files)
          echo "FILES_RESPONSE: $FILES_RESPONSE"
          
          HAS_CHANGED_RELEASE_NOTES=$(echo $FILES_RESPONSE | jq '.[].filename' | jq -s '. | any(. == env.JSON_RELEASE_FILE_PATH)')
          echo "HAS_CHANGED_RELEASE_NOTES: $HAS_CHANGED_RELEASE_NOTES"
          echo "::set-output name=HAS_CHANGED_RELEASE_NOTES::$HAS_CHANGED_RELEASE_NOTES"
      - name: Get PR Labels
        id: get-label-exception
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PULL_NUMBER: ${{steps.get-pull-request-number.outputs.PULL_REQUEST_NUMBER}}
        run: |
          PULLS_RESPONSE=$(gh api /repos/flutter/devtools/pulls/$PULL_NUMBER)
          echo $PULLS_RESPONSE

          export NOT_USER_FACING_LABEL_ID=4614108310

          HAS_EXCEPTION_LABEL=$(jq '.labels[].id ' | jq -s '. | any(. == env.NOT_USER_FACING_LABEL_ID|tostring)')
          echo "HAS_EXCEPTION_LABEL: $HAS_EXCEPTION_LABEL"

          echo "::set-output name=HAS_EXCEPTION_LABEL::$HAS_EXCEPTION_LABEL"
      - name: Check Release Preparedness requirements
        env:
          HAS_CHANGED_RELEASE_NOTES: ${{steps.get-modified-files.outputs.HAS_CHANGED_RELEASE_NOTES}}
          HAS_EXCEPTION_LABEL: ${{steps.get-label-exception.outputs.HAS_EXCEPTION_LABEL}}
        run: |
          if [ "$HAS_CHANGED_RELEASE_NOTES" != "true" ] && [ "$HAS_EXCEPTION_LABEL" != "true" ] ; then
            echo "Release Preparedness check failed"
            echo "::error file=$JSON_RELEASE_FILE_PATH,line=0,col=0,endColumn=0,title='Release Preparedness check failed'::If your change is user facing, add a release note. Otherwise add the 'Not User Facing' label to your PR"
          fi

  validation-stuff:
    runs-on: ubuntu-latest
    name: Validation Stuff
    steps:
      - uses: dart-lang/setup-dart@9a04e6d73cca37bd455e0608d7e5092f881fd603
      - uses: actions/checkout@v3
      - name: Verify the release note integrity
        run: |
          cd tool/
          dart pub get
          dart release_note_helper.dart verify -f "../$JSON_RELEASE_FILE_PATH"
      - name: Backfill PR Urls
        env:
          PULL_NUMBER: ${{steps.get-pull-request-number.outputs.PULL_REQUEST_NUMBER}}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cd tool/
          dart pub get
          dart ./release_note_helper.dart pr-url \
            -f "../$JSON_RELEASE_FILE_PATH" \
            -u https://github.com/flutter/devtools/pull/$PULL_NUMBER
      - name: Check if the User still needs to add Urls
        run: |
          if ! git diff --exit-code; then
            echo "::error file=$JSON_RELEASE_FILE_PATH,line=0,col=0,endColumn=0,title='Release Preparedness check failed'::Please make sure to add the PR Url to the release notes. You can automatically do this by running `dart tool/release_note_helper.dart pr-url -f $JSON_RELEASE_FILE_PATH -u https://github.com/flutter/devtools/pull/$PULL_NUMBER`"
          fi

      # - name: Add PR Url to Release Notes
      #   run: 
      # - name: Verify release_notes.json integrity
      #   run: 

          

